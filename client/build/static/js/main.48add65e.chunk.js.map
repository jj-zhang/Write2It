{"version":3,"sources":["placeholder.png","db/users.js","Auth/Auth.js","FileReport/ContactForm.js","Header/Header.js","db/stories.js","Landing/Landing.js","CreateStory/CreateStory.js","SignUp/Signup.js","FileReport/FileReport.js","Story/StoryIPR.js","Profile/Profile.js","AdminDashboard/UserItem.js","AdminDashboard/UserStatus.js","AdminDashboard/Report.js","AdminDashboard/Reports.js","AdminDashboard/ArchivedReport.js","AdminDashboard/ArchivedReports.js","AdminDashboard/SingleUser.js","AdminDashboard/UserRoles.js","AdminDashboard/AdminDashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","users","user","username","password","userType","email","dateCreated","Date","admin","Auth","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onclick","e","document","querySelector","contains","target","hide","login","preventDefault","credentials","uname","value","psw","response","reply_usertype","reply_username","localStorage","setItem","window","location","href","setState","error","state","addEventListener","removeEventListener","react_default","a","createElement","id","className","onSubmit","type","name","placeholder","required","Link","to","React","Component","ContactForm","submit","rows","cols","Header","logout","getItem","removeItem","displayLoginBox","closeLoginBox","closeContactForm","displayContactForm","profilePhoto","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","concat","src_Auth_Auth","bind","FileReport_ContactForm","stories","title","author","upvotes","status","description","upvotedBy","downvotedBy","sentences","text","keyword","getPage","pageNum","_stories","sort","b","isAfter","length","slice","Math","min","updateStory","story","i","Story","goToStoryViewClicked","val","includes","filter","push","_this2","Redirect","goToStoryView","stopPropagation","upvote","formatDistance","subDays","Stories","_this3","cursor","hasMore","newPage","_this4","map","Landing_Story","key","toString","loadMore","Landing","_this5","Landing_Stories","CreateStory","storyCreated","_story","createStory","SignUp","updateImage","reader","FileReader","file","files","readAsDataURL","onloadend","imagefile","iconImageUrl","result","signup","icon","errormessage","placeholderimage","alt","src","accept","onChange","FileReport","sentence","Sentence","closeReportBox","displayReportPage","displayEditBox","updateSentence","delete","canEdit","_temp","split","formattedText","s","index","splice","saveEdit","change","deleteSentence","toggleEditBox","src_FileReport_FileReport","Sentences","temp","StoryIPR_Sentence","StoryIPR","getStory","parseInt","match","params","goToLanding","displaySavingChanges","_self","setTimeout","deleteStory","console","log","showConfirm","_sentence","StoryIPR_Sentences","Profile","response2","temp1","temp2","getUserOngoingStories","ongoingStories","updateUser","formatRelative","Profile_OngoingStories","OngoingStories","UserItem","_Component","suspended","inherits","createClass","toggleSuspend","UserStatus","AdminDashboard_UserItem","Report","apply","arguments","report","archiveList","category","time","content","Reports","reports","AdminDashboard_Report","ArchivedReport","archivedReport","ArchivedReports","archivedReports","AdminDashboard_ArchivedReport","SingleUser","UserRoles","SingleUser_SingleUser","removeUser","AdminDashboard","getReport","find","obj","prevState","el","toConsumableArray","getById","idToSearch","displayView","assertThisInitialized","viewName","AdminDashboard_UserStatus","AdminDashboard_UserRoles","AdminDashboard_Reports","AdminDashboard_ArchivedReports","Main","Switch","Route","exact","path","component","adminDashboard","App","src_Header_Header","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48add65e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placeholder.4788048f.png\";","// HARDCODED DATA\n// a object representing current current users as well as fake API calls to retrieve/update them\n\nconst users = {\n    'user': {username: 'user', password: 'user', userType: 'user', email: 'hi@gmail.com', dateCreated: new Date()},\n    'admin': {username: 'admin', password: 'admin', userType: 'admin', email: 'hi@gmail.com', dateCreated: new Date()}\n};\n\n\n// authenticate a user, returns 1 if successful and 0 if not successful\nfunction authenticate(credentials) {\n    if (credentials.username in users && users[credentials.username].password === credentials.password) {\n        return users[credentials.username];\n    } else {\n        return 0;\n    }\n}\n\n// logs out a user\n// returns 1 if successful and 0 if unsuccessful\nfunction logout() {\n\n    if (!localStorage.getItem('loginStatus')) {\n        return 0;\n    }\n\n    localStorage.removeItem(\"loginStatus\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"username\");\n\n    return 1;\n}\n\n\n// get user object of a specified username\n// return 0 if unsuccessful\nfunction getUser(user) {\n    return user.username in users ? users[user.username] : 0;\n}\n\nfunction getUsers() {\n    return users;\n}\n\n// update a user\n// return the user object if successful and 0 if unsuccesful\nfunction updateUser(user) {\n\n    if (user.username in users) {\n        users[user.username] = user;\n        return users[user.username];\n    }\n\n    return 0;\n}\n\n// register a new user\n// return the user object if successful and\n// 0 if unsuccessful\nfunction signup(credentials) {\n    if (!(credentials.username in users)) {\n        users[credentials.username] = {\n            username: credentials.username,\n            password: credentials.password,\n            userType: 'user',\n            profilePhoto: credentials.profilePhoto,\n            email: credentials.email,\n            description: null,\n            dateCreated: new Date()\n        };\n        return users[credentials.username];\n    }\n    return 0;\n}\n\n\n// // set a user as an admin\n// // return the user object if successful and 0 if unsuccesful\n// function setAsAdmin(username) {\n//     if (username in users) {\n//         users[username].userType = 'admin';\n//         return users[username];\n//     }\n//\n//     return 0;\n// }\n\nexport {updateUser, getUser, getUsers, logout, authenticate, signup};","import React from 'react';\nimport './Auth.css';\nimport {authenticate} from '../db/users';\nimport {Link} from 'react-router-dom';\n\n\n// component to render authentication box\nclass Auth extends React.Component {\n    constructor(props) {\n        super(props);\n        // when error is true, error message will appear\n        this.state = {\n            error: false\n        }\n    }\n\n    // this function close the login box using the function passed in from parent Header\n    onclick = (e) => {\n        const loginbox = document.querySelector('#loginform');\n        if (!loginbox.contains(e.target)) {\n            this.props.hide();\n        }\n    }\n\n    // this function handles the submit which is the login request\n    login = (e) => {\n        e.preventDefault();\n        // get the logininfo from the form\n        const username = e.target.uname.value;\n        const password = e.target.psw.value;\n        // Fake API call, sending the password and user name to server\n        const response = authenticate({username: username, password: password});\n\n        if (response) {\n            // reply should contains the following:\n            // the hash should be generated on the serverside contains the login time& userid\n            // when sending request to server for other actions the hash should be contained \n            // in the header part for server to verify if the login is still valid, if the user \n            // has the permission to access his private info .. etc.\n            const reply_hash = \"oqidhaoihfb13131341234\";\n            const reply_usertype = response.userType;\n            const reply_username = response.username;\n            localStorage.setItem(\"loginStatus\", reply_usertype);\n            localStorage.setItem(\"token\", reply_hash);\n            localStorage.setItem(\"username\", reply_username);\n            window.location.href=\"../\";\n        } else {\n            this.setState({error: true});\n        }\n    }\n\n    // add/remove onclick to the event listener\n    componentDidMount() {\n        document.querySelector(\"#auth\").addEventListener('click', this.onclick);\n    }\n    componentWillUnmount() {\n        document.querySelector(\"#auth\").removeEventListener('click', this.onclick);\n\n    }\n\n    render() {\n        return (\n            <div id=\"auth\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6 col-xs-12\">\n                            <form id=\"loginform\" className=\"ui form shadow-lg\" onSubmit={this.login}>\n                                <div className=\"field\">\n                                    <label>Username</label>\n                                    <div className=\"ui left icon input\">\n                                        <input type=\"text\" name=\"uname\" placeholder=\"Username\" required/>\n                                        <i className=\"user icon\"/>\n                                    </div>\n                                </div>\n                                <div className=\"field\">\n                                    <label>Password</label>\n                                    <div className=\"ui left icon input\">\n                                        <input type=\"password\" name=\"psw\" placeholder=\"Password\" required/>\n                                        <i className=\"lock icon\"/>\n                                    </div>\n                                </div>\n                                <button className=\"ui teal button\" type=\"submit\">Login</button>\n                                <p className=\"signup\">New to <span className=\"lovelo\">WriteIt</span>? <Link to=\"/signup\">Sign\n                                    up!</Link></p>\n                                {this.state.error &&\n                                    <div className=\"ui negative message\">\n                                        <div className=\"header\">\n                                            Incorrect username or password.\n                                        </div>\n                                        <p>Please try again.</p>\n                                    </div>\n                                }\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Auth;","import React from 'react';\nimport './FileReport.css';\n\nclass ContactForm extends React.Component {\n    // props accept a hide function from parent\n    \n    // this function close the login box using the function passed in from parent Header\n    onclick = (e)=> {\n        const form=document.querySelector('#contactform');\n        if (!form.contains(e.target)){\n            this.props.hide();\n        }\n    }\n\n    // this function handles the submit which is the report request\n    submit = (e) => {\n        e.preventDefault();\n        //// get the logininfo from the form lines below are commented out for avoid warnings\n        // const userhash = localStorage.getItem(\"token\");\n        // const reportinfo=e.target.querySelector(\"#contactmessage\").value;\n        // FAKE API CALL\n\n        // close the popup\n        this.props.hide();\n    }\n\n    //\n    componentDidMount() {\n        document.querySelector(\"#adminreport\").addEventListener('click', this.onclick);\n    }\n\n    componentWillUnmount() {\n        document.querySelector(\"#adminreport\").removeEventListener('click', this.onclick);\n\n    }\n\n    render() {\n        return (\n            <div id=\"adminreport\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6 col-xs-12\">\n                            <form id=\"contactform\" className=\"shadow-lg ui form\" onSubmit={this.submit}>\n                                <div className=\"field\">\n                                    <label>Message to admins</label>\n                                    <div className=\"ui left icon input\">\n                                        <textarea id=\"contactmessage\" rows=\"10\" cols=\"60\"></textarea>\n                                    </div>\n                                </div>\n                                <p>You may also email us through <strong>admin@writeit.ca</strong></p>\n\n                                <button className=\"ui teal button\" type=\"submit\">Submit</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default ContactForm;","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Header.css';\nimport Auth from '../Auth/Auth';\nimport {logout} from '../db/users';\nimport ContactForm from '../FileReport/ContactForm'\n\n// component to render the header\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        // on rendered get loginStatus from localstorage, not stored implies it is a guest\n        // default dont present any form to user\n        this.state = {\n            userType: localStorage.getItem('loginStatus') || 'guest',\n            username: localStorage.getItem('username'),\n            profilePhoto: null,\n            displayLoginBox: false,\n            displayContactForm: false,\n        };\n    }\n\n    logout = e => {\n        e.preventDefault();\n        // fake API call to logout users\n        if (logout()) {\n            // refresh page back to root, rerender everything\n            window.location.href = '../';\n        }\n    }\n\n    // the following functions simply display/hide the login boxes\n    displayLoginBox = e => {\n        e.preventDefault();\n        this.setState(\n            {displayLoginBox: true}\n        );\n    }\n\n    closeLoginBox = () => {\n        this.setState(\n            {displayLoginBox: false}\n        );\n    }\n\n    closeContactForm = () =>{\n        this.setState({displayContactForm: false})\n    }\n\n    displayContactForm = () =>{\n        this.setState({displayContactForm: true})\n    }\n\n    render() {\n        return (\n            <header>\n                <div className=\"container\">\n                    <nav className=\"navbar fixed-top navbar-expand-lg navbar-light bg-light shadow-sm\">\n                        <Link className=\"navbar-brand\" to=\"/\">WriteIt</Link>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                                aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                            <ul className=\"navbar-nav  mr-auto\">\n                                {\n                                    this.state.userType === \"guest\" &&\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to='/signup'>Signup</Link>\n                                    </li>\n                                }\n                                {\n                                    this.state.userType === \"guest\" &&\n                                    <li className=\"nav-item\">\n                                        <div className=\"nav-link act-as-a\" onClick={this.displayLoginBox}>Login\n                                        </div>\n                                    </li>\n                                }\n                                {\n                                    this.state.userType !== \"guest\" &&\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to={`/profile/${this.state.username}`}>Profile</Link>\n                                    </li>\n                                }\n                                {\n                                    this.state.userType !== \"guest\" &&\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to='/createStory'>Create Story</Link>\n                                    </li>\n                                }\n                                {\n                                    this.state.userType === \"admin\" &&\n                                    <li className=\"nav-item\">\n                                        <Link className=\"nav-link\" to='/adminDashboard'>Admin Panel</Link>\n                                    </li>\n                                }\n\n                                <li className=\"nav-item\">\n                                    <div className=\"nav-link act-as-a\" onClick={this.displayContactForm}>Contact Us</div>\n                                </li>\n\n                                {\n                                    this.state.userType !== \"guest\" &&\n                                    <li className=\"nav-item\">\n                                        <div className=\"nav-link act-as-a\" onClick={this.logout}>Logout</div>\n                                    </li>\n                                }\n\n                            </ul>\n\n                            {\n                                this.state.userType !== \"guest\" &&\n                                <span className=\"user navbar-text\">\n                                   <Link to={`/profile/${this.state.username}`}>\n                                    {/*<img className=\"profilePic\" src={this.state.profilePhoto || placeholderimage} />*/}\n                                       Logged in as: <strong>{this.state.username}</strong></Link>\n                                </span>\n                            }\n\n                        </div>\n\n                    </nav>\n                </div>\n                {this.state.displayLoginBox && <Auth hide={this.closeLoginBox.bind(this)}/>}\n                {this.state.displayContactForm && <ContactForm hide={this.closeContactForm.bind(this)}/>}\n            </header>\n        );\n    }\n}\n\n\nexport default Header;\n","// HARDCODED DATA\n// a list of all current stories as well as fake API calls to retrieve/update the\n// the stories\n\n// source: https://swoonreads.com/read/\nimport {isAfter} from 'date-fns';\n\nlet stories = [\n    {\n        id: 0,\n        title: 'Alice Lost Her Socks',\n        author: 'user', // change to userid later\n        dateCreated: new Date(2019, 3, 2),\n        upvotes: 3000,\n        status: 'IPR',\n        description: 'Alice lost her socks and needs to find them.',\n        upvotedBy: ['user', 'admin'],\n        downvotedBy: [],\n        sentences: [\n            {\n                id: 0,\n                author: 'user',\n                dateCreated: new Date(),\n                upvotes: 0,\n                text: 'A frog unfortunately stole it.',\n                upvotedBy: [],\n                downvotedBy: [],\n                keyword: 'frog'\n            }\n\n        ]\n    },\n    {\n        id: 1,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: ['user', 'admin'],\n        sentences: []\n\n    },\n    {\n        id: 2,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 3,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 4,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 5,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 6,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 7,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 8,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 9,\n        title: 'Delicious Hope',\n        author: 'user',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 10,\n        title: 'Delicious Hope',\n        author: 'admin',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 11,\n        title: 'Delicious Hope',\n        author: 'admin',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 12,\n        title: 'Delicious Hope',\n        author: 'admin',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 13,\n        title: 'Delicious Hope',\n        author: 'admin',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 14,\n        title: 'Delicious Hope',\n        author: 'admin',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    },\n    {\n        id: 15,\n        title: 'Delicious Hope',\n        author: 'admin',\n        dateCreated: new Date(2019, 2, 22),\n        upvotes: 32,\n        status: 'IPR',\n        description: 'Xander and Jared are from two completly different worlds. The jock and the nerd.',\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    }\n];\n\n// get a story given its id\n// return -1 if no story with given id exists\nfunction getStory(story) {\n    for (let i = 0; i < stories.length; i++) {\n        const _story = stories[i];\n\n        if (_story.id === story.id) {\n            return _story;\n        }\n    }\n    return -1;\n}\n\n// get a page of stories (a page consists of 5 stories per page),\n// ordered based on recency and popularity\nfunction getPage(pageNum) {\n    const _stories = stories.sort((a, b) => isAfter(a.dateCreated, b.dateCreated) * 0.7 + (a.upvotes >= b.upvotes) ? 1 : 0 * 0.3);\n    return pageNum * 5 < stories.length ? _stories.slice(pageNum * 5, Math.min(pageNum * 5 + 5, stories.length)) : [];\n}\n\n// update a story and return if\n// return 0 if unsuccessful\nfunction updateStory(story) {\n    if (!localStorage.getItem('loginStatus')) {\n        return 0;\n    }\n    for (let i = 0; i < stories.length; i++) {\n        const _story = stories[i];\n\n        if (_story.id === story.id) {\n            stories[i] = story;\n            return story;\n        }\n    }\n}\n\n// create a new story\n// return 0 if unsuccessful\nfunction createStory(story) {\n    if (!localStorage.getItem('loginStatus')) {\n        return 0;\n    }\n    const user = localStorage.getItem('username');\n    const _story = {\n        id: stories.length > 0 ? stories[stories.length - 1].id + 1 : 0,\n        title: story.title,\n        author: user,\n        dateCreated: new Date(),\n        upvotes: 0,\n        status: 'IPR',\n        description: story.description,\n        upvotedBy: [],\n        downvotedBy: [],\n        sentences: []\n    };\n\n    stories.push(_story);\n\n    return _story;\n}\n\n// get a user's ongoing stories\nfunction getUserOngoingStories(user) {\n\n    return stories.filter((story) => {\n        const temp1 = story.author === user.username;\n        const temp2 = story.sentences.filter((sentence) => sentence.author === user.username)\n        return temp1 || temp2.length > 0;\n    });\n}\n\n\n// delete a story given an id\n// return 1 if successful and 0 if not\nfunction deleteStory(story) {\n    const userType = localStorage.getItem('loginStatus');\n    if (!userType || userType !== 'admin') {\n        return 0;\n    }\n    stories =\n        stories.filter((_story) => _story.id !== story.id);\n    return 1;\n}\n\nexport {getUserOngoingStories, deleteStory, getStory, createStory, getPage, updateStory};","import React from 'react';\nimport {getPage, updateStory} from '../db/stories';\nimport {formatDistance, subDays} from 'date-fns';\nimport {Redirect} from 'react-router';\nimport Auth from '../Auth/Auth';\nimport {Link} from 'react-router-dom';\n\n// component to render a story\nclass Story extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {goToStoryViewClicked: false, story: this.props.story};\n    }\n\n    // view a story\n    goToStoryView(e) {\n        e.preventDefault();\n        this.setState({goToStoryViewClicked: true});\n    }\n\n    // upvote a story, where val is 1 or -1 (representing the increment)\n    upvote(val) {\n        const story = this.state.story;\n        const user = localStorage.getItem('username');\n\n        if (!user) {\n            // user is unauthenticated so bring up the login page\n            this.props.displayLoginBox();\n\n            return;\n        }\n\n        if (val === 1) {\n            if (story.upvotedBy.includes(user)) {\n                val = -1;\n                story.upvotedBy = story.upvotedBy.filter((e) => e !== user);\n            } else if (story.downvotedBy.includes(user)) {\n                story.downvotedBy = story.downvotedBy.filter((e) => e !== user);\n            } else {\n                story.upvotedBy.push(user);\n            }\n        } else {\n            if (story.upvotedBy.includes(user)) {\n                story.upvotedBy = story.upvotedBy.filter((e) => e !== user);\n            } else if (story.downvotedBy.includes(user)) {\n                val = 1;\n                story.downvotedBy = story.downvotedBy.filter((e) => e !== user);\n            } else {\n                story.downvotedBy.push(user);\n            }\n        }\n\n        story.upvotes += val;\n\n        // update the database with new story upvote count (this is a fake API call)\n        const response = updateStory(story);\n\n        if (response) {\n            this.setState({story: response});\n        }\n\n    }\n\n    render() {\n        const story = this.state.story;\n\n        return this.state.goToStoryViewClicked ? <Redirect to={`../story/${this.state.story.id}`}/> : (\n            <div className=\"story\" onClick={this.goToStoryView.bind(this)}>\n                <div className=\"upvotes\">\n                    <button\n                        className={`upvoteButton up ${(story.upvotedBy.includes(localStorage.getItem('username')) ? ' upvoted' : '')}`}\n                        onClick={\n                            (e) => {\n                                e.stopPropagation();\n                                this.upvote.bind(this)(1);\n                            }}>\n                        <i className=\"arrow up icon\"/>\n                    </button>\n                    <div className=\"value center\">{story.upvotes}</div>\n                    <button\n                        className={`upvoteButton down ${(story.downvotedBy.includes(localStorage.getItem('username')) ? ' downvoted' : '')}`}\n                        onClick={\n                            (e) => {\n                                e.stopPropagation();\n                                this.upvote.bind(this)(-1);\n                            }}>\n                        <i className=\"arrow down icon\"/>\n                    </button>\n                </div>\n\n                <div className=\"content\">\n                    <div className=\"metadata\">\n                        Created by <Link className=\"author\" to={`/profile/${story.author}`} >{story.author}</Link> <span\n                        className=\"date\">{formatDistance(subDays(story.dateCreated, 0), new Date())} ago</span>\n                        {/*{story.status === 'IPR' ?*/}\n                            {/*<span className=\"status inprogress\"> (in progress)</span>*/}\n                            {/*:*/}\n                            {/*<span className=\"status\"> (completed)</span>*/}\n                        {/*}*/}\n                    </div>\n                    <h3 className=\"storyTitle\">{story.title}</h3>\n                    <p className=\"text\">{story.description}</p>\n                </div>\n            </div>\n        );\n    }\n}\n\n// component wrapping a list of stories\nclass Stories extends React.Component {\n    constructor(props) {\n        super(props);\n        // Fake API call to get a page stories from database\n        this.state = {stories: getPage(0), cursor: 1, hasMore: true};\n    }\n\n    // load another page of stories\n    loadMore() {\n        let stories = this.state.stories;\n        // get a page stories from database (this is a fake API call)\n        const newPage = getPage(this.state.cursor + 1);\n\n        if (newPage.length === 0) {\n            this.setState({hasMore: false});\n        } else {\n            stories = stories.concat(newPage);\n            this.setState({stories: stories, cursor: this.state.cursor + 1});\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.stories.length > 0\n                    ? this.state.stories.map((story) =>\n                        <Story displayLoginBox={this.props.displayLoginBox} key={story.id.toString()} story={story}/>)\n                    : null}\n\n                {this.state.hasMore ?\n                    <button className=\"ui teal button loadMoreButton\" onClick={this.loadMore.bind(this)}>Load\n                        more</button>\n                    : <div className=\"text-center\">No more stories to load.</div> }\n            </div>\n\n        );\n    }\n}\n\n// react component to render the landing page\nclass Landing extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {displayLoginBox: false};\n    }\n\n    // display login box\n    displayLoginBox() {\n        this.setState(\n            {displayLoginBox: true}\n        );\n    }\n\n    // close the loginbox\n    closeLoginBox() {\n        this.setState(\n            {displayLoginBox: false}\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"landing\" className=\"page\">\n                    <div className=\"pageTitle\">\n                        <h1>Top Stories</h1>\n                    </div>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-9 col-xs-12\">\n                                <Stories displayLoginBox={this.displayLoginBox.bind(this)}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {this.state.displayLoginBox && <Auth hide={this.closeLoginBox.bind(this)}/>}\n            </div>\n\n        );\n    }\n}\n\nexport default Landing;","import React from 'react';\nimport {createStory} from '../db/stories';\nimport {Redirect} from 'react-router';\n\n// react component to render the create story view\n/*\nThis is used for creating a story. \nThe user can create a story here(must fill the title and what is the story about).\nAfter clicking the \"create story\" button, the users will get a story in progress page \ncreated from the user's input\n*/\nclass CreateStory extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {storyCreated: false};\n    }\n\n    // create a new story\n    createStory(e) {\n        e.preventDefault();\n\n        // fake API call to create a new story\n        const response = createStory({\n            title: e.target.title.value,\n            description: e.target.description.value\n        });\n\n        if (response) {\n            this.setState({storyCreated: true, story: response});\n        }\n    }\n\n    render() {\n        return this.state.storyCreated ? <Redirect to={`../story/${this.state.story.id}`}/> :\n            (\n                <div id=\"createStory\" className=\"page\">\n                    <div className=\"pageTitle\">\n                        <h1>Create A Story</h1>\n                    </div>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-xs-12\">\n                                <form className=\"ui form\" onSubmit={this.createStory.bind(this)}>\n                                    <div className=\"field\">\n                                        <label>Title</label>\n                                        <div className=\"ui input\">\n                                            <input type=\"text\" name=\"title\" placeholder=\"Title\" required/>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"field\">\n                                        <label>What is your story about?</label>\n                                        <textarea name=\"description\" placeholder=\"Write something...\" required/>\n                                    </div>\n\n                                    <button className=\"ui teal button\" type=\"submit\">Create\n                                        Story\n                                    </button>\n\n                                </form>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            );\n    }\n}\n\nexport default CreateStory;","import React from 'react';\nimport './Signup.css';\nimport placeholderimage from '../placeholder.png';\nimport {signup} from '../db/users';\n\n// the Sign up page\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            iconImageUrl: placeholderimage,\n            imagefile: null,\n            error: false,\n            errormessage: null,\n        }\n    }\n    \n    // update the image preview on image change\n    updateImage = e => {\n        e.preventDefault();\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.readAsDataURL(file)\n        reader.onloadend = () => {\n            this.setState({\n                imagefile: file,\n                iconImageUrl: reader.result\n            });\n        }\n    }\n\n    // this function handles the submit which is the signup request\n    signup = e => {\n        e.preventDefault();\n        // get the logininfo from the form\n        const username = e.target.uname.value;\n        const password = e.target.psw.value;\n        const email = e.target.email.value;\n        const icon = this.state.imagefile;\n        // Fake API call to signup a new user\n        const response = signup({username: username, password: password, email: email, profilePhoto: icon});\n        if (response) {\n            // if signup success, by design the client side should immediately switch status to the logged in status\n            // & response should contains the all the login info\n            // due to inconsistent with the mimic db, for now, just refresh the page to landing, no data is actually stored\n            localStorage.setItem(\"loginStatus\", response.userType);\n            localStorage.setItem(\"token\", \"oqidhaoihfb13131341234\");\n            localStorage.setItem(\"username\", response.username);\n            window.location.href='../'\n        } else {\n            // otherwise the reply should contains some errormessage\n            const errormessage = \"Username already in use, please try another one\";\n            this.setState({error: true, errormessage: errormessage});\n        }\n    }\n\n    render() {\n        return (\n                <div id=\"signup\">\n                    <form className=\"ui form shadow-lg\" onSubmit={this.signup}>\n                        <div className=\"profileIconContainer field\">\n                            <img id=\"iconImage\" alt=\"User Icon Preview\" src={this.state.iconImageUrl}></img>\n                        </div>\n                        <div className=\"profileInputContainer\">\n                            <div className=\"field\">\n                                <label>Username</label>\n                                <div className=\"ui left icon input\">\n                                    <input type=\"text\" name=\"uname\" placeholder=\"Username\" required/>\n                                    <i className=\"user icon\"></i>\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <label>Email</label>\n                                <div className=\"ui left icon input\">\n                                    <input type=\"text\" name=\"email\" placeholder=\"XXXX@gmail.com\" required/>\n                                    <i className=\"envelope icon\"></i>\n                                </div>\n                            </div>\n                            <div className=\"field\">\n                                <label>Profile Icon</label>\n                                <div className=\"ui left icon input\">\n                                    <input type=\"file\" name=\"icon\" accept=\"image/*\" onChange={this.updateImage}/>\n                                    <i className=\"arrow circle up icon\"></i>\n                                </div>\n                            </div>\n\n                            <div className=\"field\">\n                                <label>Password</label>\n                                <div className=\"ui left icon input\">\n                                    <input type=\"password\" name=\"psw\" placeholder=\"Password\" required/>\n                                    <i className=\"lock icon\"></i>\n                                </div>\n                            </div>\n                            <button className=\"ui teal button\" type=\"submit\">Sign Up</button>\n                            {   this.state.error &&\n                            <div className=\"ui negative message\">\n                                <div className=\"header\">\n                                    {this.state.errormessage}\n                                </div>\n                                <p>Please try again.</p>\n                            </div>\n                            }\n                        </div>\n                    </form>\n                </div>\n                )\n    }\n\n\n}\n\n\nexport default SignUp;","import React from 'react';\nimport './FileReport.css';\n\nclass FileReport extends React.Component {\n    // takes 2 props user & sentence, both as string and a hide() function\n\n    // this function close the login box using the function passed in from parent Header\n    onclick = (e)=> {\n        const form=document.querySelector('#reportform');\n        if (!form.contains(e.target)){\n            this.props.hide();\n        }\n    }\n\n    // this function handles the submit which is the report request\n    submit = (e) => {\n        e.preventDefault();\n        // // get the logininfo from the form commented out for avoid warning\n        // const reportinfo=e.target.querySelector(\"#reason\").value;\n        // const reportedID = this.props.id;\n        // const reportedUser = this.props.user;\n        // API CALL \n        // close the popup\n        this.props.hide();\n    }\n\n    componentDidMount() {\n        document.querySelector(\"#filereport\").addEventListener('click', this.onclick);\n    }\n\n    componentWillUnmount() {\n        document.querySelector(\"#filereport\").removeEventListener('click', this.onclick);\n\n    }\n\n    render() {\n        return (\n                <div id=\"filereport\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-xs-12\">\n                                <form id=\"reportform\" className=\"shadow-lg ui form\" onSubmit={this.submit}>\n                                    <div className=\"field\">\n                                        <label>Sentence</label>\n                                        <div className=\"ui left icon input\">\n                                            {this.props.sentence}\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <label>Username</label>\n                                        <div className=\"ui left icon input\">\n                                            {this.props.user}\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <label>Message</label>\n                                        <div className=\"ui left icon input\">\n                                            <textarea id=\"reason\" rows=\"5\" cols=\"50\"></textarea>\n                                        </div>\n                                    </div>\n                                    <button className=\"ui teal button\" type=\"submit\">Submit</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n        )\n    }\n\n\n}\n\n\nexport default FileReport;","import React from 'react';\nimport {deleteStory, getStory, updateStory} from '../db/stories';\nimport {formatDistance, subDays} from 'date-fns';\nimport Auth from '../Auth/Auth';\nimport './Story.css';\nimport {Redirect} from 'react-router';\nimport {Link} from 'react-router-dom';\nimport Filereport from '../FileReport/FileReport';\n\n// a component to render a story's sentence\n/*\nThis is used for story in progress. \nThe user can continue the story by posting their ideas(need to include the keyword), \nupvote or downvote other users' post. The admin can also delete the story.\n*/\nclass Sentence extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayEditBox: false,\n            error: false,\n            sentence: this.props.sentence,\n            displayReportPage: false\n        };\n    }\n\n    closeReportBox = () =>{\n        this.setState({displayReportPage:false});\n    }\n\n    displayReportPage = () =>{\n        this.setState({displayReportPage:true});\n    }\n\n    // upvote a sentence, where val is 1 or -1 (representing the increment)\n    upvote(val) {\n        const sentence = this.state.sentence;\n        const user = localStorage.getItem('username');\n\n\n        if (!user) {\n            // user is unauthenticated so bring up the login page\n            this.props.displayLoginBox();\n\n            return;\n        }\n\n        if (val === 1) {\n            if (sentence.upvotedBy.includes(user)) {\n                val = -1;\n                sentence.upvotedBy = sentence.upvotedBy.filter((e) => e !== user);\n            } else if (sentence.downvotedBy.includes(user)) {\n                sentence.downvotedBy = sentence.downvotedBy.filter((e) => e !== user);\n            } else {\n                sentence.upvotedBy.push(user);\n            }\n        } else {\n            if (sentence.upvotedBy.includes(user)) {\n                sentence.upvotedBy = sentence.upvotedBy.filter((e) => e !== user);\n            } else if (sentence.downvotedBy.includes(user)) {\n                val = 1;\n                sentence.downvotedBy = sentence.downvotedBy.filter((e) => e !== user);\n            } else {\n                sentence.downvotedBy.push(user);\n            }\n        }\n\n        sentence.upvotes += val;\n\n        // fake API call to update the database with new sentence upvote count\n        this.props.updateSentence(sentence, false);\n    }\n\n\n    // toggle the edit box to edit sentences\n    toggleEditBox(e) {\n        e.preventDefault();\n\n        this.setState({displayEditBox: !this.state.displayEditBox});\n    }\n\n    // listen to changes to state variables in the edit box form\n    change(e) {\n        e.preventDefault();\n\n        const sentence = this.state.sentence;\n        // if (sentence.text.includes(sentence.keyword)) {\n            sentence[e.target.name] = e.target.value;\n            this.setState({sentence: sentence});\n        // }\n    }\n\n    // edit a sentence\n    saveEdit(e) {\n        e.preventDefault();\n\n        const sentence = this.state.sentence;\n\n        if (sentence.text.includes(sentence.keyword)) {\n            sentence[e.target.name] = e.target.value;\n\n            // fake API call to update the database with new sentence\n            this.props.updateSentence(sentence, true);\n\n            this.setState({displayEditBox: false});\n        } else {\n            this.setState({error: true, sentence: this.props.sentence});\n        }\n\n    }\n\n    // delete a sentence\n    deleteSentence(e) {\n        e.preventDefault();\n\n        const sentence = this.state.sentence;\n        sentence.delete = true;\n\n        // fake API call to update the database with new sentence\n        this.props.updateSentence(sentence, true);\n    }\n\n    render() {\n        const sentence = this.state.sentence;\n\n        const user = localStorage.getItem('username');\n        const userType = localStorage.getItem('loginStatus');\n\n        const canEdit = sentence.author === user || userType === 'admin';\n        // const canDelete = userType === 'admin';\n\n        // format sentence\n        const _temp = sentence.text.split(sentence.keyword);\n        let formattedText = _temp.map((s, index) => <span key={index}>{s}<strong className=\"highlight\">{sentence.keyword}</strong></span>);\n        formattedText.splice(-1);\n        formattedText.push(<span key={_temp.length - 1}>{_temp[_temp.length - 1]}</span>);\n\n        formattedText = <p>{formattedText}</p>;\n\n        return (\n            <div className=\"sentence\">\n                <div className=\"upvotes\">\n                    <button\n                        className={`upvoteButton up ${(sentence.upvotedBy.includes(localStorage.getItem('username')) ? ' upvoted' : '')}`}\n                        onClick={\n                            (e) => {\n                                e.stopPropagation();\n                                this.upvote.bind(this)(1);\n                            }}>\n                        <i className=\"arrow up icon\"></i>\n                    </button>\n                    <div className=\"value center\">{sentence.upvotes}</div>\n                    <button\n                        className={`upvoteButton down ${(sentence.downvotedBy.includes(localStorage.getItem('username')) ? ' downvoted' : '')}`}\n                        onClick={\n                            (e) => {\n                                e.stopPropagation();\n                                this.upvote.bind(this)(-1);\n                            }}>\n                        <i className=\"arrow down icon\"></i>\n                    </button>\n\n                </div>\n\n                {this.state.displayEditBox ?\n                    (\n                        <div className=\"editBox\">\n                            <form className=\"ui form\" onSubmit={this.saveEdit.bind(this)}>\n                                <div className=\"field\">\n                                    <label>Your sentence must include the word <strong\n                                        className=\"highlight\">{sentence.keyword}</strong>.</label>\n                                    <textarea name=\"text\" value={sentence.text} onChange={this.change.bind(this)}\n                                              required>\n                                                </textarea>\n                                </div>\n\n                                <button className=\"ui red icon button\"\n                                        onClick={this.deleteSentence.bind(this)}>Delete\n                                </button>\n                                <button className=\"ui teal submit icon button\" type=\"submit\">Save\n                                </button>\n\n                                {this.state.error &&\n                                <div className=\"ui negative message\">\n                                    <div className=\"header\">\n                                        Your sentence must include the word <strong\n                                        className=\"highlight\">{sentence.keyword}</strong>.\n                                    </div>\n                                    <p>Please try again.</p>\n                                </div>}\n                            </form>\n\n\n                        </div>\n\n                    ) : (\n                        <div className=\"content\">\n                            <div className=\"metadata\">\n                                Written by <Link className=\"author\" to={`/profile/${sentence.author}`}>{sentence.author}</Link><span\n                                className=\"date\"> {formatDistance(subDays(sentence.dateCreated, 0), new Date())} ago</span>\n\n                                <div className=\"buttonGroup\">\n\n                                    {canEdit &&\n                                    <button className=\"editButton\" onClick={this.toggleEditBox.bind(this)}>\n                                        <i className=\"edit icon\"></i>\n                                        Edit\n                                    </button>\n                                    }\n                                    {(userType === 'admin' || userType === 'user') &&\n                                        <button className=\"editButton\" onClick={this.displayReportPage}>\n                                            <i className=\"exclamation circle icon\"></i>\n                                            Report\n                                        </button>\n                                    }\n\n                                </div>\n\n                                {this.state.displayReportPage?\n                                <Filereport user={sentence.author} sentence={formattedText} hide={this.closeReportBox} id={sentence.id}/>:null}\n                            </div>\n                            {formattedText}\n                        </div>\n\n                    )\n                }\n            </div>\n        );\n    }\n}\n\n// component to wrap a story's sentences\nclass Sentences extends React.Component {\n    render() {\n        const sentences = this.props.sentences;\n\n        const temp =  sentences.length > 0\n            && sentences.map((sentence) =>\n                <Sentence key={sentence.id.toString()} displayLoginBox={this.props.displayLoginBox}\n                          updateSentence={this.props.updateSentence}\n                          sentence={sentence}/>);\n        return (\n            <div>\n                {temp}\n            </div>\n        );\n\n    }\n}\n\n// component to render the story view\nclass StoryIPR extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // fake API to get this story's data\n        const response = getStory({id: parseInt(this.props.match.params.id)});\n\n        // fake API call to get a keyword\n        const keyword = 'frog';\n\n        if (response) {\n            this.state = {\n                error: false,\n                displayEditBox: false,\n                goToLanding: false,\n                displaySavingChanges: false,\n                displayLoginBox: false,\n                story: response,\n                keyword: keyword\n            };\n        }\n    }\n\n    submit(e) {\n        e.preventDefault();\n\n        const user = localStorage.getItem('username');\n\n        // check if user authenticated\n        if (!user) {\n            this.displayLoginBox();\n            return;\n        }\n\n        const text = e.target.text.value;\n\n        // check if text contains require keyword\n        if (!text.includes(this.state.keyword)) {\n            this.setState({error: true});\n            return;\n        }\n\n        const story = this.state.story;\n\n        story.sentences.push({\n            id: story.sentences.length > 0 ? story.sentences[story.sentences.length - 1].id + 1 : 10,\n            author: user,\n            dateCreated: new Date(),\n            upvotes: 0,\n            text: text,\n            upvotedBy: [],\n            downvotedBy: [],\n            keyword: this.state.keyword\n        });\n\n        // fake API call to update a story\n        const response = updateStory(story);\n        if (response) {\n            this.setState({story: story, error: false});\n            e.target.text.value = '';\n        }\n\n    }\n\n    // toggle the edit box to edit stories\n    toggleEditBox(e) {\n        e.preventDefault();\n        this.setState({displayEditBox: !this.state.displayEditBox});\n    }\n\n    // listen to changes to state variables in the edit box form\n    change(e) {\n        e.preventDefault();\n        const story = this.state.story;\n        story[e.target.name] = e.target.value;\n        this.setState({story: story});\n    }\n\n    // edit a story\n    saveEdit(e) {\n        e.preventDefault();\n        const story = this.state.story;\n\n        // update the database with new story upvote count (this is a fake API call)\n        // fake API call to update a story\n        const response = updateStory(story);\n        if (!response) {\n            return;\n        }\n\n        \n        const _self = this;\n        setTimeout(() => _self.setState({displaySavingChanges: false, story: response}), 1000);\n        this.setState({displaySavingChanges: true, displayEditBox: false});\n    }\n\n    // delete a story\n    deleteStory(e) {\n        e.preventDefault();\n\n        // fake API call to delete a story\n        const response = deleteStory({id: this.state.story.id});\n        if (!response) {\n            return;\n        }\n        const _self = this;\n        setTimeout(() => _self.setState({goToLanding: true}), 1000);\n        console.log(\"story deleted\");\n        this.setState({displayEditBox: false, displaySavingChanges: true});\n    }\n\n    // upvote this story\n    upvote(val) {\n        const story = this.state.story;\n        const user = localStorage.getItem('username');\n\n        if (!user) {\n            // user is unauthenticated so bring up the login page\n            this.displayLoginBox();\n            return;\n        }\n\n        if (val === 1) {\n            if (story.upvotedBy.includes(user)) {\n                val = -1;\n                story.upvotedBy = story.upvotedBy.filter((e) => e !== user);\n            } else if (story.downvotedBy.includes(user)) {\n                story.downvotedBy = story.downvotedBy.filter((e) => e !== user);\n            } else {\n                story.upvotedBy.push(user);\n            }\n        } else {\n            if (story.upvotedBy.includes(user)) {\n                story.upvotedBy = story.upvotedBy.filter((e) => e !== user);\n            } else if (story.downvotedBy.includes(user)) {\n                val = 1;\n                story.downvotedBy = story.downvotedBy.filter((e) => e !== user);\n            } else {\n                story.downvotedBy.push(user);\n            }\n        }\n\n        story.upvotes += val;\n\n        // update the database with new story upvote count (this is a fake API call)\n        // fake API call to update a story\n        const response = updateStory(story);\n\n        if (response) {\n            this.setState({story: response});\n        }\n    }\n\n\n    // update a story's sentence\n    updateSentence(sentence, showConfirm) {\n        const story = this.state.story;\n\n        if (sentence.delete) { // delete sentence\n            story.sentences =\n                story.sentences.filter((_sentence) => _sentence.id !== sentence.id);\n        } else { // change sentence\n            for (let i = 0; i > story.sentences.length; i++) {\n                if (story.sentences[i].id === sentence.id) {\n                    story.sentence[i] = sentence;\n                    break;\n                }\n            }\n        }\n\n        // fake API call to update a story\n        const response = updateStory(story);\n\n        if (response) {\n            this.setState({story: response});\n        }\n\n        if (showConfirm) {\n            this.setState({displaySavingChanges: true});\n            const _self = this;\n            setTimeout(() => _self.setState({displaySavingChanges: false, story: response}), 1000);\n        }\n\n    }\n\n    // display the login box\n    displayLoginBox() {\n        this.setState({displayLoginBox: true});\n    }\n\n    // close the loginbox\n    closeLoginBox() {\n        this.setState({displayLoginBox: false});\n    }\n\n    render() {\n        const story = this.state.story;\n        const user = localStorage.getItem('username');\n        const userType = localStorage.getItem('loginStatus');\n\n        const canEdit = story.author === user || userType === 'admin';\n        // const canDelete = userType === 'admin';\n\n        return this.state.goToLanding ? <Redirect to=\"/\"/> : (\n            <div id=\"story\" className=\"page\">\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-9 col-xs\">\n\n                            <div className=\"story shadow\">\n                                <div className=\"upvotes\">\n                                    <button\n                                        className={`upvoteButton up ${(story.upvotedBy.includes(localStorage.getItem('username')) ? ' upvoted' : '')}`}\n                                        onClick={this.upvote.bind(this, 1)}>\n                                        <i className=\"arrow up icon\"></i>\n                                    </button>\n                                    <div className=\"value center\">{story.upvotes}</div>\n                                    <button\n                                        className={`upvoteButton down ${(story.downvotedBy.includes(localStorage.getItem('username')) ? ' downvoted' : '')}`}\n                                        onClick={this.upvote.bind(this, -1)}>\n                                        <i className=\"arrow down icon\"></i>\n                                    </button>\n                                </div>\n\n                                { this.state.displayEditBox ?\n                                    <div className=\"col-12\">\n                                        <div className=\"editBox\">\n                                            <form className=\"ui form\" onSubmit={this.saveEdit.bind(this)}>\n                                                <div className=\"field\">\n                                                    <label>Title</label>\n                                                    <input type=\"text\" name=\"title\" value={this.state.story.title}\n                                                           onChange={this.change.bind(this)} required>\n                                                    </input>\n                                                </div>\n                                                <div className=\"field\">\n                                                    <label>What is your story about?</label>\n                                                    <textarea name=\"description\"\n                                                              value={this.state.story.description}\n                                                              onChange={this.change.bind(this)} required>\n                                                    </textarea>\n                                                </div>\n                                                {userType === \"admin\"?\n                                                <button className=\"ui red icon button\"\n                                                        onClick={this.deleteStory.bind(this)}>Delete\n                                                </button>:null}\n                                                <button className=\"ui teal submit icon button\" type=\"submit\">Save\n                                                </button>\n\n                                            </form>\n                                        </div>\n                                    </div>\n                                    :\n                                    <div className=\"content\">\n                                        <div className=\"metadata\">\n                                            Created by <Link className=\"author\" to={`/profile/${story.author}`} >{story.author}</Link> <span\n                                            className=\"date\">{formatDistance(subDays(story.dateCreated, 3), new Date())} ago</span>\n                                            {/*{story.status === 'IPR' ?*/}\n                                                {/*<span className=\"status inprogress\"> (in progress)</span>*/}\n                                                {/*:*/}\n                                                {/*<span className=\"status\"> (completed)</span>*/}\n                                            {/*}*/}\n                                            {canEdit &&\n                                            <button className=\"editButton\" onClick={this.toggleEditBox.bind(this)}>\n                                                <i className=\"edit icon\"></i>\n                                                Edit\n                                            </button>\n                                            }\n\n                                        </div>\n                                        <h1 className=\"storyTitle\">{story.title}</h1>\n                                        <p className=\"text\">{story.description}</p>\n                                    </div>\n                                }\n                            </div>\n\n                            <Sentences sentences={this.state.story.sentences}\n                                       updateSentence={this.updateSentence.bind(this)}\n                                       displayLoginBox={this.displayLoginBox.bind(this)}/>\n\n                            {story.status === 'IPR' &&\n                                <div className=\"row textBox\">\n                                    <div className=\"col-12\">\n                                        <h2>Contribute to this story!</h2>\n                                        <form className=\"ui form\" onSubmit={this.submit.bind(this)}>\n                                            <div className=\"field\">\n                                                <label>Your sentence must include the word <strong\n                                                    className=\"highlight\">{this.state.keyword}</strong>.</label>\n                                                <textarea name=\"text\" placeholder=\"Write something...\"\n                                                          required>\n                                                    </textarea>\n                                            </div>\n                                            <button className=\"ui teal submit icon button\" type=\"submit\">Submit\n                                            </button>\n\n                                            {this.state.error &&\n                                                <div className=\"ui negative message\">\n                                                    <div className=\"header\">\n                                                        Your sentence must include the word <strong\n                                                        className=\"highlight\">{this.state.keyword}</strong>.\n                                                    </div>\n                                                    <p>Please try again.</p>\n                                                </div>\n                                            }\n                                        </form>\n                                    </div>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                {this.state.displayLoginBox && <Auth hide={this.closeLoginBox.bind(this)}/>}\n                {this.state.displaySavingChanges &&\n                    <div className=\"savingChangesMessage ui teal message\">\n                        <div className=\"header\">\n                            Success\n                        </div>\n                        <p>Your changes have been saved.</p>\n                    </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default StoryIPR;","import React from 'react';\nimport {updateUser, getUser} from '../db/users';\nimport {getUserOngoingStories} from '../db/stories';\nimport './Profile.css';\nimport {formatRelative, subDays} from 'date-fns';\nimport {Link} from 'react-router-dom';\nimport placeholderimage from '../placeholder.png';\n\n// a component to render user profiles\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // fake API call to get this user's information\n        const response = getUser({username: this.props.match.params.id});\n\n        // fake API to get this user's ongoing stories\n        const response2 = getUserOngoingStories({username: this.props.match.params.id});\n\n        this.state = {\n            displayEditBox: false,\n            displaySavingChanges: false,\n            user: response,\n            ongoingStories: response2\n        };\n    }\n\n    // toggle edit profile box\n    toggleEditBox(e) {\n        e.preventDefault();\n        this.setState({displayEditBox: !this.state.displayEditBox});\n    }\n\n    // upload a new image\n    updateImage(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n            const user = this.state.user;\n            user.profilePhoto = reader.result;\n\n            this.setState({\n                imagefile: file,\n                user: user\n            });\n\n        }\n    }\n\n    // listen to changes to state variables in the edit box form\n    change(e) {\n        e.preventDefault();\n        const user = this.state.user;\n        user[e.target.name] = e.target.value;\n        this.setState({user: user});\n    }\n\n\n    // save edit changes\n    saveEdit(e) {\n        e.preventDefault();\n        const user = this.state.user;\n        // fake API call to update a story\n        const response = updateUser(user);\n\n        if (response) {\n            this.setState({displaySavingChanges: true, displayEditBox: false, user: response});\n            const _self = this;\n            setTimeout(() => _self.setState({displaySavingChanges: false, story: response}), 1000);\n        }\n    }\n\n\n    render() {\n        const user = this.state.user;\n\n        const userType = localStorage.getItem('loginStatus');\n        const username = localStorage.getItem('username');\n\n        const canEdit = userType === 'admin' || user.username === username;\n\n        return (\n            <div>\n                <div id=\"profile\" className=\"page\">\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <div className=\"profileInfo col-lg-3 col-xs-12\">\n                                {\n                                    this.state.displayEditBox ? (\n                                        <div className=\"editBox\">\n                                            <form className=\"ui form\" onSubmit={this.saveEdit.bind(this)}>\n                                                <div className=\"profileIconContainer field\">\n                                                    <img id=\"iconImage\" alt=\"User Icon Preview\" src={user.profilePhoto || placeholderimage}></img>\n                                                </div>\n                                                <div className=\"profileInputContainer\">\n                                                    {/*<div className=\"field\">*/}\n                                                        {/*<label>Username</label>*/}\n                                                        {/*<div className=\"ui left icon input\">*/}\n                                                            {/*<input type=\"text\" name=\"username\" value={user.username} onChange={this.change.bind(this)} placeholder=\"Username\" required/>*/}\n                                                            {/*<i className=\"user icon\"></i>*/}\n                                                        {/*</div>*/}\n                                                    {/*</div>*/}\n                                                    <div className=\"field\">\n                                                        <label>Email</label>\n                                                        <div className=\"ui left icon input\">\n                                                            <input type=\"text\" name=\"email\" value={user.email} onChange={this.change.bind(this)} placeholder=\"XXXX@gmail.com\" required/>\n                                                            <i className=\"envelope icon\"></i>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"field\">\n                                                        <label>Profile Icon</label>\n                                                        <div className=\"ui left icon input\">\n                                                            <input type=\"file\" name=\"icon\" accept=\"image/*\" onChange={this.updateImage.bind(this)}/>\n                                                            <i className=\"arrow circle up icon\"></i>\n                                                        </div>\n                                                    </div>\n\n                                                    <div className=\"field\">\n                                                        <label>Password</label>\n                                                        <div className=\"ui left icon input\">\n                                                            <input type=\"password\" name=\"password\" value={user.password} onChange={this.change.bind(this)} placeholder=\"Password\" required/>\n                                                            <i className=\"lock icon\"></i>\n                                                        </div>\n                                                    </div>\n\n\n                                                    <button className=\"ui teal button\" type=\"submit\">Save</button>\n\n\n                                                    {/*{this.state.error &&*/}\n                                                    {/*<div className=\"ui negative message\">*/}\n                                                        {/*<div className=\"header\">*/}\n                                                            {/*This username is taken.*/}\n                                                        {/*</div>*/}\n                                                        {/*<p>Please try again.</p>*/}\n                                                    {/*</div>*/}\n                                                    {/*}*/}\n                                                </div>\n                                            </form>\n                                        </div>\n                                    ) : (\n                                        <div className=\"ui card\">\n                                            <div className=\"image\">\n                                                <img alt=\"User Icon Preview\" src={user.profilePhoto || placeholderimage}/>\n                                            </div>\n                                            <div className=\"content\">\n                                                <span className=\"header\">{user.username}</span>\n                                                <div className=\"meta\">\n                                            <span\n                                                className=\"date\">Joined {formatRelative(subDays(user.dateCreated, 0), new Date())}</span>\n                                                </div>\n                                                <div className=\"description\">\n                                                    {user.description || ''}\n                                                </div>\n\n                                                <div className=\"text-center\">\n                                                    {canEdit && !this.state.displayEditBox &&\n                                                    <button className=\"editButton ui basic button\" onClick={this.toggleEditBox.bind(this)}>\n                                                        <i className=\"edit icon\"></i>\n                                                        Edit profile\n                                                    </button>\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                }\n                            </div>\n\n                            <div className=\"ongoingStories col-lg-3 col-xs-12\">\n                                <h1>Ongoing Stories</h1>\n                                <OngoingStories ongoingStories={this.state.ongoingStories}/>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                {this.state.displaySavingChanges &&\n                    <div className=\"savingChangesMessage ui teal message\">\n                        <div className=\"header\">\n                            Success\n                        </div>\n                        <p>Your changes have been saved.</p>\n                    </div>\n                }\n            </div>);\n    }\n}\n\n// a component to redender a list of ongoing stories\nclass OngoingStories extends React.Component {\n    render() {\n        let ongoingStories = this.props.ongoingStories;\n        ongoingStories = ongoingStories.map((story) => <div key={story.id} className=\"story ui segment\">\n            <Link to={`/story/${story.id}`}>{story.title}</Link>\n        </div>);\n        return (<div className=\"ui segments\">{ongoingStories}</div>);\n    }\n}\n\nexport default Profile;","import React, {Component} from 'react';\nimport placeholderimage from '../placeholder.png';\nimport {Link} from 'react-router-dom';\n\n// React component to render the individual user.\nexport class UserItem extends Component {\n    constructor(props) {\n        super(props);\n\n        const user = {name: this.props.user.name, suspended: false};\n\n        this.state = {user: user};\n    }\n\n    // Fake API call toggle whether a user is suspended or not\n    toggleSuspend() {\n        const user = this.state.user;\n        user.suspended = !user.suspended;\n\n        this.setState({user: user});\n    }\n\n\n    render() {\n        return (\n            <div className=\"item\">\n                <div className=\"right floated content\">\n                {/* Switch unsuspend and suspend status. */}\n                    {this.state.user.suspended ?\n                        <div className=\"ui small blue button userOption\" onClick={this.toggleSuspend.bind(this)}>Unsuspend</div>\n                        :\n                        <div className=\"ui small red button userOption\" onClick={this.toggleSuspend.bind(this)}>Suspend</div>\n                    }\n\n                </div>\n                <img className=\"ui avatar image\" src={placeholderimage} alt=\"logo\"/>\n                <div className=\"content\">\n\n                    <Link to={`/profile/${this.state.user.name}`} className=\"user header\">{this.state.user.name}</Link>\n\n                    <p>{this.state.user.suspended ? <span className=\"suspended\">Suspended</span> : 'Active'}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserItem\n","import React, { Component } from 'react';\nimport UserItem from './UserItem'\n\n// React component to render the each user's status\nclass UserStatus extends Component {\n    render() {\n        return this.props.users.map((user) => (\n            <UserItem key={user.id} user={user}/>\n        ));\n    };\n}\n\nexport default UserStatus;","import React, { Component } from 'react'\n\n// React component to render the individual report.\nexport class Report extends Component {\n  render() {\n    const id = this.props.report.id;\n    return (\n        <div className=\"item\">\n            <div className=\"right floated content\">\n              <button className=\"ui small blue button\" onClick={this.props.archiveList.bind(this,id)}>Archive</button>\n            </div>\n            <div className=\"content\">\n                <div className=\"header\">{this.props.report.category}</div>\n                <div className=\"content\">\n                Submitted by {this.props.report.name} {this.props.report.time}\n                </div>\n                {this.props.report.content}\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default Report\n","import React, { Component } from 'react';\nimport Report from './Report';\n\n// React component to render the list of reports.\nexport class Reports extends Component {\n    render() {\n      return this.props.reports.map((report) => (\n        <Report key={report.id} report={report} archiveList={this.props.archiveList}/>\n      ));\n    };\n}\n\nexport default Reports","import React, { Component } from 'react'\n\n// React component to render the individual archived report.\nexport class ArchivedReport extends Component {\n  render() {\n    return (\n        <div className=\"item\">\n        <div className=\"right floated content\">\n        </div>\n        <div className=\"content\">\n            <div className=\"header\">{this.props.archivedReport.category}</div>\n            <div className=\"content\">\n            Submitted by {this.props.archivedReport.name} {this.props.archivedReport.time}\n            </div>\n            {this.props.archivedReport.content}\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default ArchivedReport\n","import React, { Component } from 'react';\nimport ArchivedReport from './ArchivedReport';\n\n// React component to render a list of archived reports.\nexport class ArchivedReports extends Component {\n  render() {\n    // Mapping each individual achived report.\n    return this.props.archivedReports.map((archivedReport) => (\n        <ArchivedReport key={archivedReport.id} archivedReport = {archivedReport}/>\n    ));\n  }\n}\n\nexport default ArchivedReports;","import React, { Component } from 'react';\nimport placeholderimage from '../placeholder.png';\nimport {Link} from 'react-router-dom';\n\n// React component to render the single user.\nexport class SingleUser extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {user: props.user};\n    }\n\n    // Fake API call to set users as admins or regular players\n    toggleSuspend() {\n        const user = this.state.user;\n        user.userType = user.userType === 'admin' ? 'user' : 'admin';\n\n        this.setState({user: user});\n    }\n\n\n    render() {\n        return (\n            <div className=\"item\">\n                <div className=\"right floated content\">\n                    {/* Switch unsuspend and suspend status. */}    \n                    {this.state.user.userType === 'admin' ?\n                        <div className=\"ui small red button userOption\" onClick={this.toggleSuspend.bind(this)}>Remove</div>\n                        :\n                        <div className=\"ui small blue button userOption\" onClick={this.toggleSuspend.bind(this)}>Add</div>\n                    }\n\n                </div>\n                <img className=\"ui avatar image\" src={placeholderimage} alt=\"logo\"/>\n                <div className=\"content\">\n                    <Link to={`/profile/${this.state.user.name}`} className=\"user header\">{this.state.user.name}</Link>\n                    <p>{this.state.user.userType === 'admin' ? 'Admin' : 'Player'}</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SingleUser\n","import React, { Component } from 'react';\nimport {SingleUser} from './SingleUser';\n\n// React component to render the list of user roles.\nexport class UserRoles extends Component {\n  render() {\n    return this.props.users.map((user) => (\n      <SingleUser key={user.id} user={user} removeUser={this.props.removeUser}/>\n    ));\n  }\n}\n\nexport default UserRoles\n","import React, { Component } from 'react';\nimport UserStatus from './UserStatus';\nimport Reports from './Reports';\nimport ArchivedReports from './ArchivedReports';\nimport UserRoles from './UserRoles';\nimport './AdminDashboard.css';\n\nclass AdminDashboard extends Component {\n    constructor(props) {\n        super(props);\n        // Hardcode data that records different reports.\n        this.state = {\n            displayView: 'userReports',\n            reports: [\n                {\n                    id: 1,\n                    name: \"Mike\",\n                    category: \"Bug\",\n                    time: \"3 days ago\",\n                    content: \"Hello, I cannot seem to create new stories.\"\n                },\n                {\n                  id: 2,\n                  name: \"John\",\n                  category: \"Suggestion\",\n                  time: \"1 week ago\",\n                  content: \"Hi, I suggest that we can change the background color.\"\n                },\n                {\n                  id: 3,\n                  name: \"Sam\",\n                  category: \"Bug\",\n                  time: \"3 days ago\",\n                  content: \"Hey, I cannot vote to the new story.\"\n                } \n            ],\n            // Hardcode data that records different archived reports.\n            archivedReports: [               \n              {\n                  id: 4,\n                  name: \"Eason\",\n                  category: \"Bug\",\n                  time: \"3 days ago\",\n                  content: \"Hello, I cannot log into the page.\"\n              }\n            ],\n\n            // Hardcode data that records different users.\n            users: [\n                {\n                    id: 1,\n                    name: 'user',\n                    password: 'user',\n                    userType: 'user',\n                    email: 'hi@gmail.com'\n                },\n               {\n                    id:2,\n                    name: 'admin',\n                    password: 'admin',\n                    userType: 'admin',\n                    email: 'hi@gmail.com'\n                }\n            ]\n        }\n        // Bind the function archiveList with the constructor.\n        this.archiveList = this.archiveList.bind(this);\n    }\n\n    // The function to archive the report list and add it to the archive report list.\n    archiveList = (id) => {\n        var getReport = this.state.reports.find(obj => {\n            return obj.id === id;\n        });\n      this.setState(prevState => ({\n        reports: prevState.reports.filter(el => el.id !== id),\n        archivedReports: [...prevState.archivedReports, getReport]\n      }));\n    }\n\n    // React component to render the admin dashboard view\n    removeUser = (id) => {\n        this.setState(prevState => ({\n            users: prevState.users.filter(el => el.id !== id),\n        }));\n    }\n\n    getById = (idToSearch) => {\n        return this.state.reports.filter(report => report.id === idToSearch);\n    }\n\n\n    // display view (user reports, user status, user roles)\n    displayView(viewName) {\n\n\n        console.log('d');\n\n        this.setState({displayView: viewName});\n\n\n    }\n    render() {\n        return (\n        <div id=\"adminDashboard\" className=\"page\">\n            <div className=\"pageTitle\">\n                <h1>Admin Panel</h1>\n            </div>\n            <div className=\"container-fluid\">\n\n\n                <div className=\"row\">\n\n\n                    <div className=\"col-lg-9 col-xs-12\">\n\n                        <div className=\"ui pointing menu\">\n                            <button className={`item ${this.state.displayView === 'userReports' ? 'active' : '' }`} onClick={this.displayView.bind(this, 'userReports')}>\n                                User Reports\n                                {/*<div class=\"ui teal left pointing label\">3</div>*/}\n                            </button>\n                            <button className={`item ${this.state.displayView === 'userStatus' ? 'active' : '' }`} onClick={this.displayView.bind(this, 'userStatus')}>\n                                User Status\n                            </button>\n                            <button className={`item ${this.state.displayView === 'userRoles' ? 'active' : '' }`} onClick={this.displayView.bind(this, 'userRoles')}>\n                                User Roles\n                            </button>\n\n                        </div>\n\n                        { this.state.displayView === 'userStatus' && <div className=\"ui segment\">\n                            <h2>User Status</h2>\n                            <div className=\"ui middle aligned divided list\">\n                                <UserStatus users={this.state.users}/>\n                            </div>\n                        </div> }\n\n\n                        { this.state.displayView === 'userRoles' && <div className=\"ui segment\">\n                            <h2>User Roles</h2>\n                            <div className=\"userList ui middle aligned divided list\">\n                                <UserRoles users={this.state.users}/>\n                            </div>\n                        </div> }\n\n                        { this.state.displayView === 'userReports' && <div className=\"ui segment userReports\">\n                            <h2>New Reports</h2>\n                            <div className=\"ui middle aligned divided list\">\n                                <Reports reports={this.state.reports} archiveList={this.archiveList}/>\n                            </div>\n\n                            <h2>Archived Reports</h2>\n                            <div className=\"ui middle aligned divided list\">\n                                <ArchivedReports archivedReports={this.state.archivedReports}/>\n                            </div>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default AdminDashboard;","import React from 'react';\nimport './App.css';\n\nimport {Switch, Route} from 'react-router-dom';\nimport Header from './Header/Header';\nimport Landing from './Landing/Landing';\nimport CreateStory from './CreateStory/CreateStory';\n\nimport SignUp from './SignUp/Signup';\nimport StoryIPR from './Story/StoryIPR';\nimport Profile from './Profile/Profile';\nimport adminDashboard from './AdminDashboard/AdminDashboard';\n\n\n// routes\nfunction Main() {\n    return (\n        <main>\n            <Switch>\n                <Route exact path='/' component={Landing}/>\n                <Route path='/signup' component={SignUp}/>\n                <Route path='/adminDashboard' component={adminDashboard}/>\n                <Route path='/profile/:id' component={Profile}/>\n                <Route path='/createStory' component={CreateStory}/>\n                <Route path='/story/:id' component={StoryIPR}/>\n\n            </Switch>\n        </main>\n    );\n}\n\n\n\n// tester\n// function placeholder() {\n//     return (\n//         <div>\n//             <h1>holds place for some path</h1>\n//         </div>\n//     );\n// }\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <Header />\n                <Main />\n\n                {/*<footer class=\"footer\">*/}\n                    {/*WriteIt*/}\n                {/*</footer>*/}\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\n// root\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}